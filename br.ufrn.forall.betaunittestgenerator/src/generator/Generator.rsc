@license{
	Copyright (c) 2014, Ernesto C. B. de Matos, Anamaria M. Moreira, João B. de S. Neto.
	All rights reserved.
	
	Redistribution and use in source and binary forms, with or without modification, are permitted provided that 
	the following conditions are met:
	
	1. Redistributions of source code must retain the above copyright notice, this list of conditions and the 
		following disclaimer.
	
	2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the 
		following disclaimer in the documentation and/or other materials provided with the distribution.
	
	3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote 
		products derived from this software without specific prior written permission.
	
	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
	INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
	DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
	SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
	SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
	WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
	USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}
@contributor{João Batista de Souza Neto}

@doc{

Synopsis: Generate a unit test (JUnit or CuTest notation) from a XML test suite report generated by BETA.

Examples:
<screen>
import br::ufrn::forall::beta::generator::Generator
generateJUnit(|file:///Users/joaosouza/Downloads/beta_tool/report_for_addPaper_from_Paperround.xml|, |file:///Users/joaosouza/Downloads/beta_tool/PaperroundAddPaperTest.java|);
</screen>
Generate `PaperroundAddPaperTest.java` unit test file from `report_for_addPaper_from_Paperround.xml` test suite report.
}

module generator::Generator

import generator::XMLParser;
import generator::Model;
import generator::C::CuTest;
import generator::Java::JUnit;
import IO;

@doc{

Synopsis: Generate a JUnit test from a XML report generated by BETA.

}
public void generateJUnit(loc xmlFile, loc outputFolder){
	TestSuite testSuite = testSuiteFromXML(xmlFile); // parse a XML file to a TestSuite
	str testContent = templateJUnit(testSuite); // generate the test content from a TestSuite
	loc outputFile = outputFolder + (className(testSuite) + ".java"); // output file name
	writeFile(outputFile, testContent); // create the output file with the test content
	println("JUnit test file generated");
}

@doc{

Synopsis: Generate a CuTest test from a XML report generated by BETA.

}
public void generateCuTest(loc xmlFile, loc outputFolder){
	TestSuite testSuite = testSuiteFromXML(xmlFile); // parse a XML file to a TestSuite
	str testContent = templateCuTest(testSuite); // generate the test content from a TestSuite
	loc outputFile = outputFolder + "<testSuite.machineName>_<testSuite.operationUnderTest>_test.c"; // output file name
	writeFile(outputFile, testContent); // create the output file with the test content
	println("CuTest test file generated");
}